// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package application_pb

import (
	driver "database/sql/driver"
	fmt "fmt"
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *Application) Clone() any {
	return proto.Clone(msg).(*Application)
}
func (msg *Application) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Application) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentConfig) Clone() any {
	return proto.Clone(msg).(*DeploymentConfig)
}
func (msg *DeploymentConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Target) Clone() any {
	return proto.Clone(msg).(*Target)
}
func (msg *Target) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Target) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Blobstore) Clone() any {
	return proto.Clone(msg).(*Blobstore)
}
func (msg *Blobstore) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Blobstore) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SFTPSettings) Clone() any {
	return proto.Clone(msg).(*SFTPSettings)
}
func (msg *SFTPSettings) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SFTPSettings) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SFTPUser) Clone() any {
	return proto.Clone(msg).(*SFTPUser)
}
func (msg *SFTPUser) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SFTPUser) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *BlobstoreRef) Clone() any {
	return proto.Clone(msg).(*BlobstoreRef)
}

type IsBlobstoreRef_Source = isBlobstoreRef_Source

func (msg *BlobstoreRef) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *BlobstoreRef) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Grant) Clone() any {
	return proto.Clone(msg).(*Grant)
}
func (msg *Grant) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Grant) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Database) Clone() any {
	return proto.Clone(msg).(*Database)
}

type IsDatabase_Engine = isDatabase_Engine

func (msg *Database) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Database) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Database_Postgres) Clone() any {
	return proto.Clone(msg).(*Database_Postgres)
}
func (msg *Database_Postgres) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Database_Postgres) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Runtime) Clone() any {
	return proto.Clone(msg).(*Runtime)
}
func (msg *Runtime) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Runtime) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *WorkerConfig) Clone() any {
	return proto.Clone(msg).(*WorkerConfig)
}
func (msg *WorkerConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *WorkerConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Subscription) Clone() any {
	return proto.Clone(msg).(*Subscription)
}
func (msg *Subscription) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Subscription) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Route) Clone() any {
	return proto.Clone(msg).(*Route)
}
func (msg *Route) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Route) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Container) Clone() any {
	return proto.Clone(msg).(*Container)
}

type IsContainer_Source = isContainer_Source

func (msg *Container) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Container) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Container_Image) Clone() any {
	return proto.Clone(msg).(*Container_Image)
}
func (msg *Container_Image) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Container_Image) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *EnvironmentVariable) Clone() any {
	return proto.Clone(msg).(*EnvironmentVariable)
}

type IsEnvironmentVariable_Spec = isEnvironmentVariable_Spec

func (msg *EnvironmentVariable) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *EnvironmentVariable) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DatabaseEnvVar) Clone() any {
	return proto.Clone(msg).(*DatabaseEnvVar)
}
func (msg *DatabaseEnvVar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DatabaseEnvVar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *BlobstoreEnvVar) Clone() any {
	return proto.Clone(msg).(*BlobstoreEnvVar)
}

type IsBlobstoreEnvVar_Format = isBlobstoreEnvVar_Format

func (msg *BlobstoreEnvVar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *BlobstoreEnvVar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *MapEnvVar) Clone() any {
	return proto.Clone(msg).(*MapEnvVar)
}
func (msg *MapEnvVar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *MapEnvVar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *FromEnvVar) Clone() any {
	return proto.Clone(msg).(*FromEnvVar)
}
func (msg *FromEnvVar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *FromEnvVar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SecretEnvVar) Clone() any {
	return proto.Clone(msg).(*SecretEnvVar)
}
func (msg *SecretEnvVar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SecretEnvVar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Secret) Clone() any {
	return proto.Clone(msg).(*Secret)
}
func (msg *Secret) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Secret) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// RouteProtocol
const (
	RouteProtocol_UNSPECIFIED RouteProtocol = 0
	RouteProtocol_HTTP        RouteProtocol = 1
	RouteProtocol_GRPC        RouteProtocol = 2
)

var (
	RouteProtocol_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "HTTP",
		2: "GRPC",
	}
	RouteProtocol_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"HTTP":        1,
		"GRPC":        2,
	}
	RouteProtocol_value_either = map[string]int32{
		"UNSPECIFIED":                0,
		"ROUTE_PROTOCOL_UNSPECIFIED": 0,
		"HTTP":                       1,
		"ROUTE_PROTOCOL_HTTP":        1,
		"GRPC":                       2,
		"ROUTE_PROTOCOL_GRPC":        2,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x RouteProtocol) ShortString() string {
	return RouteProtocol_name_short[int32(x)]
}
func (x RouteProtocol) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *RouteProtocol) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := RouteProtocol_value_either[strVal]
	*x = RouteProtocol(val)
	return nil
}

// RouteGroup
const (
	RouteGroup_UNSPECIFIED RouteGroup = 0
	RouteGroup_FIRST       RouteGroup = 1
	RouteGroup_NORMAL      RouteGroup = 2
	RouteGroup_FALLBACK    RouteGroup = 3
)

var (
	RouteGroup_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "FIRST",
		2: "NORMAL",
		3: "FALLBACK",
	}
	RouteGroup_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"FIRST":       1,
		"NORMAL":      2,
		"FALLBACK":    3,
	}
	RouteGroup_value_either = map[string]int32{
		"UNSPECIFIED":             0,
		"ROUTE_GROUP_UNSPECIFIED": 0,
		"FIRST":                   1,
		"ROUTE_GROUP_FIRST":       1,
		"NORMAL":                  2,
		"ROUTE_GROUP_NORMAL":      2,
		"FALLBACK":                3,
		"ROUTE_GROUP_FALLBACK":    3,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x RouteGroup) ShortString() string {
	return RouteGroup_name_short[int32(x)]
}
func (x RouteGroup) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *RouteGroup) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := RouteGroup_value_either[strVal]
	*x = RouteGroup(val)
	return nil
}

// Demand
const (
	Demand_UNSPECIFIED Demand = 0
	Demand_LIGHT       Demand = 1
	Demand_MEDIUM      Demand = 2
	Demand_HEAVY       Demand = 3
)

var (
	Demand_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "LIGHT",
		2: "MEDIUM",
		3: "HEAVY",
	}
	Demand_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"LIGHT":       1,
		"MEDIUM":      2,
		"HEAVY":       3,
	}
	Demand_value_either = map[string]int32{
		"UNSPECIFIED":        0,
		"DEMAND_UNSPECIFIED": 0,
		"LIGHT":              1,
		"DEMAND_LIGHT":       1,
		"MEDIUM":             2,
		"DEMAND_MEDIUM":      2,
		"HEAVY":              3,
		"DEMAND_HEAVY":       3,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x Demand) ShortString() string {
	return Demand_name_short[int32(x)]
}
func (x Demand) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *Demand) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := Demand_value_either[strVal]
	*x = Demand(val)
	return nil
}

// O5Var
const (
	O5Var_UNSPECIFIED      O5Var = 0
	O5Var_ADAPTER_ENDPOINT O5Var = 1
)

var (
	O5Var_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "ADAPTER_ENDPOINT",
	}
	O5Var_value_short = map[string]int32{
		"UNSPECIFIED":      0,
		"ADAPTER_ENDPOINT": 1,
	}
	O5Var_value_either = map[string]int32{
		"UNSPECIFIED":             0,
		"O5_VAR_UNSPECIFIED":      0,
		"ADAPTER_ENDPOINT":        1,
		"O5_VAR_ADAPTER_ENDPOINT": 1,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x O5Var) ShortString() string {
	return O5Var_name_short[int32(x)]
}
func (x O5Var) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *O5Var) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := O5Var_value_either[strVal]
	*x = O5Var(val)
	return nil
}
