// Code generated by Bprotoc-gen-go-o5-messaging . DO NOT EDIT.
// versions:
// - protoc-gen-go-o5-messaging 0.0.0
// source: o5/awsdeployer/v1/events/deployer_event.proto

package awsdeployer_epb

import (
	context "context"

	o5msg "github.com/pentops/o5-messaging.go/o5msg"
)

// Service: DeployerEvents
type DeployerEventsSender[C any] struct {
	Sender o5msg.Sender[C]
}

func NewDeployerEventsSender[C any](sender o5msg.Sender[C]) *DeployerEventsSender[C] {
	sender.Register(o5msg.TopicDescriptor{
		Service: "o5.awsdeployer.v1.events.DeployerEvents",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "Deployment",
				Message: (*DeploymentEvent).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "Stack",
				Message: (*StackEvent).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "Environment",
				Message: (*EnvironmentEvent).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &DeployerEventsSender[C]{Sender: sender}
}

type DeployerEventsCollector[C any] struct {
	Collector o5msg.Collector[C]
}

func NewDeployerEventsCollector[C any](collector o5msg.Collector[C]) *DeployerEventsCollector[C] {
	collector.Register(o5msg.TopicDescriptor{
		Service: "o5.awsdeployer.v1.events.DeployerEvents",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "Deployment",
				Message: (*DeploymentEvent).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "Stack",
				Message: (*StackEvent).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "Environment",
				Message: (*EnvironmentEvent).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &DeployerEventsCollector[C]{Collector: collector}
}

// Method: Deployment

func (msg *DeploymentEvent) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsdeployer.v1.events.DeployerEvents",
		GrpcMethod:       "Deployment",
		Headers:          map[string]string{},
		DestinationTopic: "o5-deployer-events",
	}
	return header
}

func (send DeployerEventsSender[C]) Deployment(ctx context.Context, sendContext C, msg *DeploymentEvent) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect DeployerEventsCollector[C]) Deployment(sendContext C, msg *DeploymentEvent) {
	collect.Collector.Collect(sendContext, msg)
}

// Method: Stack

func (msg *StackEvent) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsdeployer.v1.events.DeployerEvents",
		GrpcMethod:       "Stack",
		Headers:          map[string]string{},
		DestinationTopic: "o5-deployer-events",
	}
	return header
}

func (send DeployerEventsSender[C]) Stack(ctx context.Context, sendContext C, msg *StackEvent) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect DeployerEventsCollector[C]) Stack(sendContext C, msg *StackEvent) {
	collect.Collector.Collect(sendContext, msg)
}

// Method: Environment

func (msg *EnvironmentEvent) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsdeployer.v1.events.DeployerEvents",
		GrpcMethod:       "Environment",
		Headers:          map[string]string{},
		DestinationTopic: "o5-deployer-events",
	}
	return header
}

func (send DeployerEventsSender[C]) Environment(ctx context.Context, sendContext C, msg *EnvironmentEvent) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect DeployerEventsCollector[C]) Environment(sendContext C, msg *EnvironmentEvent) {
	collect.Collector.Collect(sendContext, msg)
}
