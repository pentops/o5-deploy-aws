// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: o5/deployer/v1/stack.proto

package deployer_pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/pentops/jsonapi/gen/j5/ext/v1/ext_j5pb"
	_ "github.com/pentops/protostate/gen/list/v1/psml_pb"
	psm_pb "github.com/pentops/protostate/gen/state/v1/psm_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StackStatus int32

const (
	StackStatus_STACK_STATUS_UNSPECIFIED StackStatus = 0
	StackStatus_STACK_STATUS_MIGRATING   StackStatus = 1
	StackStatus_STACK_STATUS_AVAILABLE   StackStatus = 2
)

// Enum value maps for StackStatus.
var (
	StackStatus_name = map[int32]string{
		0: "STACK_STATUS_UNSPECIFIED",
		1: "STACK_STATUS_MIGRATING",
		2: "STACK_STATUS_AVAILABLE",
	}
	StackStatus_value = map[string]int32{
		"STACK_STATUS_UNSPECIFIED": 0,
		"STACK_STATUS_MIGRATING":   1,
		"STACK_STATUS_AVAILABLE":   2,
	}
)

func (x StackStatus) Enum() *StackStatus {
	p := new(StackStatus)
	*p = x
	return p
}

func (x StackStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StackStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_deployer_v1_stack_proto_enumTypes[0].Descriptor()
}

func (StackStatus) Type() protoreflect.EnumType {
	return &file_o5_deployer_v1_stack_proto_enumTypes[0]
}

func (x StackStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StackStatus.Descriptor instead.
func (StackStatus) EnumDescriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{0}
}

type StackKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackId string `protobuf:"bytes,1,opt,name=stack_id,json=stackId,proto3" json:"stack_id,omitempty"`
}

func (x *StackKeys) Reset() {
	*x = StackKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackKeys) ProtoMessage() {}

func (x *StackKeys) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackKeys.ProtoReflect.Descriptor instead.
func (*StackKeys) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{0}
}

func (x *StackKeys) GetStackId() string {
	if x != nil {
		return x.StackId
	}
	return ""
}

type StackState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *psm_pb.StateMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Keys     *StackKeys            `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
	Status   StackStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=o5.deployer.v1.StackStatus" json:"status,omitempty"`
	Data     *StackStateData       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StackState) Reset() {
	*x = StackState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackState) ProtoMessage() {}

func (x *StackState) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackState.ProtoReflect.Descriptor instead.
func (*StackState) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{1}
}

func (x *StackState) GetMetadata() *psm_pb.StateMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StackState) GetKeys() *StackKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *StackState) GetStatus() StackStatus {
	if x != nil {
		return x.Status
	}
	return StackStatus_STACK_STATUS_UNSPECIFIED
}

func (x *StackState) GetData() *StackStateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StackStateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeployment *StackDeployment   `protobuf:"bytes,4,opt,name=current_deployment,json=currentDeployment,proto3,oneof" json:"current_deployment,omitempty"`
	StackName         string             `protobuf:"bytes,5,opt,name=stack_name,json=stackName,proto3" json:"stack_name,omitempty"`
	ApplicationName   string             `protobuf:"bytes,6,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	EnvironmentName   string             `protobuf:"bytes,7,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	EnvironmentId     string             `protobuf:"bytes,8,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	QueuedDeployments []*StackDeployment `protobuf:"bytes,9,rep,name=queued_deployments,json=queuedDeployments,proto3" json:"queued_deployments,omitempty"`
	Config            *StackConfig       `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StackStateData) Reset() {
	*x = StackStateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackStateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackStateData) ProtoMessage() {}

func (x *StackStateData) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackStateData.ProtoReflect.Descriptor instead.
func (*StackStateData) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{2}
}

func (x *StackStateData) GetCurrentDeployment() *StackDeployment {
	if x != nil {
		return x.CurrentDeployment
	}
	return nil
}

func (x *StackStateData) GetStackName() string {
	if x != nil {
		return x.StackName
	}
	return ""
}

func (x *StackStateData) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *StackStateData) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *StackStateData) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *StackStateData) GetQueuedDeployments() []*StackDeployment {
	if x != nil {
		return x.QueuedDeployments
	}
	return nil
}

func (x *StackStateData) GetConfig() *StackConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeSource *SourceTriggerType `protobuf:"bytes,10,opt,name=code_source,json=codeSource,proto3" json:"code_source,omitempty"`
}

func (x *StackConfig) Reset() {
	*x = StackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackConfig) ProtoMessage() {}

func (x *StackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackConfig.ProtoReflect.Descriptor instead.
func (*StackConfig) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{3}
}

func (x *StackConfig) GetCodeSource() *SourceTriggerType {
	if x != nil {
		return x.CodeSource
	}
	return nil
}

type StackDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Version      string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *StackDeployment) Reset() {
	*x = StackDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackDeployment) ProtoMessage() {}

func (x *StackDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackDeployment.ProtoReflect.Descriptor instead.
func (*StackDeployment) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{4}
}

func (x *StackDeployment) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *StackDeployment) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SourceTriggerType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*SourceTriggerType_Github_
	Type isSourceTriggerType_Type `protobuf_oneof:"type"`
}

func (x *SourceTriggerType) Reset() {
	*x = SourceTriggerType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceTriggerType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceTriggerType) ProtoMessage() {}

func (x *SourceTriggerType) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceTriggerType.ProtoReflect.Descriptor instead.
func (*SourceTriggerType) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{5}
}

func (m *SourceTriggerType) GetType() isSourceTriggerType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SourceTriggerType) GetGithub() *SourceTriggerType_Github {
	if x, ok := x.GetType().(*SourceTriggerType_Github_); ok {
		return x.Github
	}
	return nil
}

type isSourceTriggerType_Type interface {
	isSourceTriggerType_Type()
}

type SourceTriggerType_Github_ struct {
	Github *SourceTriggerType_Github `protobuf:"bytes,1,opt,name=github,proto3,oneof"`
}

func (*SourceTriggerType_Github_) isSourceTriggerType_Type() {}

type StackEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *psm_pb.EventMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Keys     *StackKeys            `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
	Event    *StackEventType       `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *StackEvent) Reset() {
	*x = StackEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEvent) ProtoMessage() {}

func (x *StackEvent) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEvent.ProtoReflect.Descriptor instead.
func (*StackEvent) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{6}
}

func (x *StackEvent) GetMetadata() *psm_pb.EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StackEvent) GetKeys() *StackKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *StackEvent) GetEvent() *StackEventType {
	if x != nil {
		return x.Event
	}
	return nil
}

type StackEventType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*StackEventType_Configured_
	//	*StackEventType_DeploymentRequested_
	//	*StackEventType_DeploymentCompleted_
	//	*StackEventType_DeploymentFailed_
	//	*StackEventType_RunDeployment_
	Type isStackEventType_Type `protobuf_oneof:"type"`
}

func (x *StackEventType) Reset() {
	*x = StackEventType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType) ProtoMessage() {}

func (x *StackEventType) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType.ProtoReflect.Descriptor instead.
func (*StackEventType) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7}
}

func (m *StackEventType) GetType() isStackEventType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *StackEventType) GetConfigured() *StackEventType_Configured {
	if x, ok := x.GetType().(*StackEventType_Configured_); ok {
		return x.Configured
	}
	return nil
}

func (x *StackEventType) GetDeploymentRequested() *StackEventType_DeploymentRequested {
	if x, ok := x.GetType().(*StackEventType_DeploymentRequested_); ok {
		return x.DeploymentRequested
	}
	return nil
}

func (x *StackEventType) GetDeploymentCompleted() *StackEventType_DeploymentCompleted {
	if x, ok := x.GetType().(*StackEventType_DeploymentCompleted_); ok {
		return x.DeploymentCompleted
	}
	return nil
}

func (x *StackEventType) GetDeploymentFailed() *StackEventType_DeploymentFailed {
	if x, ok := x.GetType().(*StackEventType_DeploymentFailed_); ok {
		return x.DeploymentFailed
	}
	return nil
}

func (x *StackEventType) GetRunDeployment() *StackEventType_RunDeployment {
	if x, ok := x.GetType().(*StackEventType_RunDeployment_); ok {
		return x.RunDeployment
	}
	return nil
}

type isStackEventType_Type interface {
	isStackEventType_Type()
}

type StackEventType_Configured_ struct {
	Configured *StackEventType_Configured `protobuf:"bytes,2,opt,name=configured,proto3,oneof"`
}

type StackEventType_DeploymentRequested_ struct {
	DeploymentRequested *StackEventType_DeploymentRequested `protobuf:"bytes,3,opt,name=deployment_requested,json=deploymentRequested,proto3,oneof"`
}

type StackEventType_DeploymentCompleted_ struct {
	DeploymentCompleted *StackEventType_DeploymentCompleted `protobuf:"bytes,4,opt,name=deployment_completed,json=deploymentCompleted,proto3,oneof"`
}

type StackEventType_DeploymentFailed_ struct {
	DeploymentFailed *StackEventType_DeploymentFailed `protobuf:"bytes,5,opt,name=deployment_failed,json=deploymentFailed,proto3,oneof"`
}

type StackEventType_RunDeployment_ struct {
	RunDeployment *StackEventType_RunDeployment `protobuf:"bytes,7,opt,name=run_deployment,json=runDeployment,proto3,oneof"`
}

func (*StackEventType_Configured_) isStackEventType_Type() {}

func (*StackEventType_DeploymentRequested_) isStackEventType_Type() {}

func (*StackEventType_DeploymentCompleted_) isStackEventType_Type() {}

func (*StackEventType_DeploymentFailed_) isStackEventType_Type() {}

func (*StackEventType_RunDeployment_) isStackEventType_Type() {}

type SourceTriggerType_Github struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo   string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Branch string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *SourceTriggerType_Github) Reset() {
	*x = SourceTriggerType_Github{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceTriggerType_Github) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceTriggerType_Github) ProtoMessage() {}

func (x *SourceTriggerType_Github) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceTriggerType_Github.ProtoReflect.Descriptor instead.
func (*SourceTriggerType_Github) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SourceTriggerType_Github) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SourceTriggerType_Github) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *SourceTriggerType_Github) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type StackEventType_Configured struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string       `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	EnvironmentId   string       `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	EnvironmentName string       `protobuf:"bytes,3,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	Config          *StackConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StackEventType_Configured) Reset() {
	*x = StackEventType_Configured{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType_Configured) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType_Configured) ProtoMessage() {}

func (x *StackEventType_Configured) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType_Configured.ProtoReflect.Descriptor instead.
func (*StackEventType_Configured) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7, 0}
}

func (x *StackEventType_Configured) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *StackEventType_Configured) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *StackEventType_Configured) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *StackEventType_Configured) GetConfig() *StackConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StackEventType_DeploymentRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment      *StackDeployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	ApplicationName string           `protobuf:"bytes,2,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	EnvironmentName string           `protobuf:"bytes,3,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	EnvironmentId   string           `protobuf:"bytes,4,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *StackEventType_DeploymentRequested) Reset() {
	*x = StackEventType_DeploymentRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType_DeploymentRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType_DeploymentRequested) ProtoMessage() {}

func (x *StackEventType_DeploymentRequested) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType_DeploymentRequested.ProtoReflect.Descriptor instead.
func (*StackEventType_DeploymentRequested) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7, 1}
}

func (x *StackEventType_DeploymentRequested) GetDeployment() *StackDeployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *StackEventType_DeploymentRequested) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *StackEventType_DeploymentRequested) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *StackEventType_DeploymentRequested) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type StackEventType_DeploymentCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *StackDeployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *StackEventType_DeploymentCompleted) Reset() {
	*x = StackEventType_DeploymentCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType_DeploymentCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType_DeploymentCompleted) ProtoMessage() {}

func (x *StackEventType_DeploymentCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType_DeploymentCompleted.ProtoReflect.Descriptor instead.
func (*StackEventType_DeploymentCompleted) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7, 2}
}

func (x *StackEventType_DeploymentCompleted) GetDeployment() *StackDeployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type StackEventType_DeploymentFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *StackDeployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Error      string           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StackEventType_DeploymentFailed) Reset() {
	*x = StackEventType_DeploymentFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType_DeploymentFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType_DeploymentFailed) ProtoMessage() {}

func (x *StackEventType_DeploymentFailed) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType_DeploymentFailed.ProtoReflect.Descriptor instead.
func (*StackEventType_DeploymentFailed) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7, 3}
}

func (x *StackEventType_DeploymentFailed) GetDeployment() *StackDeployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *StackEventType_DeploymentFailed) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StackEventType_RunDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
}

func (x *StackEventType_RunDeployment) Reset() {
	*x = StackEventType_RunDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_stack_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackEventType_RunDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackEventType_RunDeployment) ProtoMessage() {}

func (x *StackEventType_RunDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_stack_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackEventType_RunDeployment.ProtoReflect.Descriptor instead.
func (*StackEventType_RunDeployment) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_stack_proto_rawDescGZIP(), []int{7, 4}
}

func (x *StackEventType_RunDeployment) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

var File_o5_deployer_v1_stack_proto protoreflect.FileDescriptor

var file_o5_deployer_v1_stack_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x35, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x35,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6a, 0x35, 0x2f, 0x65, 0x78,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x73, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x73, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x73, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x47, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x2b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0xea, 0xe8, 0x81, 0xd9, 0x02,
	0x02, 0x08, 0x01, 0x52, 0x07, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x3a, 0x0d, 0xc2, 0xe8,
	0x81, 0xd9, 0x02, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x86, 0x02, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x73, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x10, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xea, 0xe5, 0x81, 0xd9,
	0x02, 0x04, 0x12, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x42, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6f,
	0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x8a, 0x9b, 0x81, 0xca, 0x02,
	0x07, 0xa2, 0x01, 0x04, 0x52, 0x02, 0x08, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x04, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x44, 0xba, 0x48, 0x23, 0x72, 0x21, 0x32, 0x1f, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x2d, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x8a, 0x9b, 0x81, 0xca, 0x02, 0x18, 0x72, 0x16,
	0x0a, 0x14, 0x52, 0x12, 0x08, 0x01, 0x12, 0x0e, 0x74, 0x73, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5e, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xba, 0x48, 0x14,
	0x72, 0x12, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x2b, 0x24, 0x8a, 0x9b, 0x81, 0xca, 0x02, 0x16, 0x72, 0x14, 0x0a, 0x12, 0x52, 0x10,
	0x08, 0x01, 0x12, 0x0c, 0x74, 0x73, 0x76, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x66, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3b, 0xba, 0x48, 0x14,
	0x72, 0x12, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x2b, 0x24, 0x8a, 0x9b, 0x81, 0xca, 0x02, 0x1e, 0x72, 0x1c, 0x0a, 0x1a, 0x52, 0x18,
	0x08, 0x01, 0x12, 0x14, 0x74, 0x73, 0x76, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0d, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x12, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x35, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x35, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63,
	0x6f, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5a, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x35,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x1a,
	0x4a, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x73, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x10, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0xea, 0xe5, 0x81, 0xd9, 0x02, 0x04, 0x12, 0x02, 0x08, 0x01, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x8a, 0x09, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x64, 0x12, 0x67, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x14, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f,
	0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x75, 0x6e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x75,
	0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xbe, 0x01, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xd3, 0x01, 0x0a,
	0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x1a, 0x56, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x69, 0x0a, 0x10, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x3f,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x34, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x92, 0x9b, 0x81, 0xca, 0x02, 0x04, 0x52, 0x02, 0x08, 0x01, 0x2a,
	0x63, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x18, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x47,
	0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x43,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x02, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x6f, 0x35, 0x2d, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2d, 0x61, 0x77, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6f, 0x35, 0x2f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_o5_deployer_v1_stack_proto_rawDescOnce sync.Once
	file_o5_deployer_v1_stack_proto_rawDescData = file_o5_deployer_v1_stack_proto_rawDesc
)

func file_o5_deployer_v1_stack_proto_rawDescGZIP() []byte {
	file_o5_deployer_v1_stack_proto_rawDescOnce.Do(func() {
		file_o5_deployer_v1_stack_proto_rawDescData = protoimpl.X.CompressGZIP(file_o5_deployer_v1_stack_proto_rawDescData)
	})
	return file_o5_deployer_v1_stack_proto_rawDescData
}

var file_o5_deployer_v1_stack_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_o5_deployer_v1_stack_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_o5_deployer_v1_stack_proto_goTypes = []interface{}{
	(StackStatus)(0),                           // 0: o5.deployer.v1.StackStatus
	(*StackKeys)(nil),                          // 1: o5.deployer.v1.StackKeys
	(*StackState)(nil),                         // 2: o5.deployer.v1.StackState
	(*StackStateData)(nil),                     // 3: o5.deployer.v1.StackStateData
	(*StackConfig)(nil),                        // 4: o5.deployer.v1.StackConfig
	(*StackDeployment)(nil),                    // 5: o5.deployer.v1.StackDeployment
	(*SourceTriggerType)(nil),                  // 6: o5.deployer.v1.SourceTriggerType
	(*StackEvent)(nil),                         // 7: o5.deployer.v1.StackEvent
	(*StackEventType)(nil),                     // 8: o5.deployer.v1.StackEventType
	(*SourceTriggerType_Github)(nil),           // 9: o5.deployer.v1.SourceTriggerType.Github
	(*StackEventType_Configured)(nil),          // 10: o5.deployer.v1.StackEventType.Configured
	(*StackEventType_DeploymentRequested)(nil), // 11: o5.deployer.v1.StackEventType.DeploymentRequested
	(*StackEventType_DeploymentCompleted)(nil), // 12: o5.deployer.v1.StackEventType.DeploymentCompleted
	(*StackEventType_DeploymentFailed)(nil),    // 13: o5.deployer.v1.StackEventType.DeploymentFailed
	(*StackEventType_RunDeployment)(nil),       // 14: o5.deployer.v1.StackEventType.RunDeployment
	(*psm_pb.StateMetadata)(nil),               // 15: psm.state.v1.StateMetadata
	(*psm_pb.EventMetadata)(nil),               // 16: psm.state.v1.EventMetadata
}
var file_o5_deployer_v1_stack_proto_depIdxs = []int32{
	15, // 0: o5.deployer.v1.StackState.metadata:type_name -> psm.state.v1.StateMetadata
	1,  // 1: o5.deployer.v1.StackState.keys:type_name -> o5.deployer.v1.StackKeys
	0,  // 2: o5.deployer.v1.StackState.status:type_name -> o5.deployer.v1.StackStatus
	3,  // 3: o5.deployer.v1.StackState.data:type_name -> o5.deployer.v1.StackStateData
	5,  // 4: o5.deployer.v1.StackStateData.current_deployment:type_name -> o5.deployer.v1.StackDeployment
	5,  // 5: o5.deployer.v1.StackStateData.queued_deployments:type_name -> o5.deployer.v1.StackDeployment
	4,  // 6: o5.deployer.v1.StackStateData.config:type_name -> o5.deployer.v1.StackConfig
	6,  // 7: o5.deployer.v1.StackConfig.code_source:type_name -> o5.deployer.v1.SourceTriggerType
	9,  // 8: o5.deployer.v1.SourceTriggerType.github:type_name -> o5.deployer.v1.SourceTriggerType.Github
	16, // 9: o5.deployer.v1.StackEvent.metadata:type_name -> psm.state.v1.EventMetadata
	1,  // 10: o5.deployer.v1.StackEvent.keys:type_name -> o5.deployer.v1.StackKeys
	8,  // 11: o5.deployer.v1.StackEvent.event:type_name -> o5.deployer.v1.StackEventType
	10, // 12: o5.deployer.v1.StackEventType.configured:type_name -> o5.deployer.v1.StackEventType.Configured
	11, // 13: o5.deployer.v1.StackEventType.deployment_requested:type_name -> o5.deployer.v1.StackEventType.DeploymentRequested
	12, // 14: o5.deployer.v1.StackEventType.deployment_completed:type_name -> o5.deployer.v1.StackEventType.DeploymentCompleted
	13, // 15: o5.deployer.v1.StackEventType.deployment_failed:type_name -> o5.deployer.v1.StackEventType.DeploymentFailed
	14, // 16: o5.deployer.v1.StackEventType.run_deployment:type_name -> o5.deployer.v1.StackEventType.RunDeployment
	4,  // 17: o5.deployer.v1.StackEventType.Configured.config:type_name -> o5.deployer.v1.StackConfig
	5,  // 18: o5.deployer.v1.StackEventType.DeploymentRequested.deployment:type_name -> o5.deployer.v1.StackDeployment
	5,  // 19: o5.deployer.v1.StackEventType.DeploymentCompleted.deployment:type_name -> o5.deployer.v1.StackDeployment
	5,  // 20: o5.deployer.v1.StackEventType.DeploymentFailed.deployment:type_name -> o5.deployer.v1.StackDeployment
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_o5_deployer_v1_stack_proto_init() }
func file_o5_deployer_v1_stack_proto_init() {
	if File_o5_deployer_v1_stack_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_o5_deployer_v1_stack_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackStateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceTriggerType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceTriggerType_Github); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType_Configured); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType_DeploymentRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType_DeploymentCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType_DeploymentFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_stack_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackEventType_RunDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_o5_deployer_v1_stack_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_o5_deployer_v1_stack_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SourceTriggerType_Github_)(nil),
	}
	file_o5_deployer_v1_stack_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*StackEventType_Configured_)(nil),
		(*StackEventType_DeploymentRequested_)(nil),
		(*StackEventType_DeploymentCompleted_)(nil),
		(*StackEventType_DeploymentFailed_)(nil),
		(*StackEventType_RunDeployment_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_o5_deployer_v1_stack_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_o5_deployer_v1_stack_proto_goTypes,
		DependencyIndexes: file_o5_deployer_v1_stack_proto_depIdxs,
		EnumInfos:         file_o5_deployer_v1_stack_proto_enumTypes,
		MessageInfos:      file_o5_deployer_v1_stack_proto_msgTypes,
	}.Build()
	File_o5_deployer_v1_stack_proto = out.File
	file_o5_deployer_v1_stack_proto_rawDesc = nil
	file_o5_deployer_v1_stack_proto_goTypes = nil
	file_o5_deployer_v1_stack_proto_depIdxs = nil
}
