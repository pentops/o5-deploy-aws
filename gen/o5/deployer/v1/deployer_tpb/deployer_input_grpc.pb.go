// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: o5/deployer/v1/topic/deployer_input.proto

package deployer_tpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DeployerInputTopicClient is the client API for DeployerInputTopic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DeployerInputTopicClient interface {
	RequestDeployment(ctx context.Context, in *RequestDeploymentMessage, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type deployerInputTopicClient struct {
	cc grpc.ClientConnInterface
}

func NewDeployerInputTopicClient(cc grpc.ClientConnInterface) DeployerInputTopicClient {
	return &deployerInputTopicClient{cc}
}

func (c *deployerInputTopicClient) RequestDeployment(ctx context.Context, in *RequestDeploymentMessage, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/o5.deployer.v1.topic.DeployerInputTopic/RequestDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployerInputTopicServer is the server API for DeployerInputTopic service.
// All implementations must embed UnimplementedDeployerInputTopicServer
// for forward compatibility
type DeployerInputTopicServer interface {
	RequestDeployment(context.Context, *RequestDeploymentMessage) (*emptypb.Empty, error)
	mustEmbedUnimplementedDeployerInputTopicServer()
}

// UnimplementedDeployerInputTopicServer must be embedded to have forward compatible implementations.
type UnimplementedDeployerInputTopicServer struct {
}

func (UnimplementedDeployerInputTopicServer) RequestDeployment(context.Context, *RequestDeploymentMessage) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestDeployment not implemented")
}
func (UnimplementedDeployerInputTopicServer) mustEmbedUnimplementedDeployerInputTopicServer() {}

// UnsafeDeployerInputTopicServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeployerInputTopicServer will
// result in compilation errors.
type UnsafeDeployerInputTopicServer interface {
	mustEmbedUnimplementedDeployerInputTopicServer()
}

func RegisterDeployerInputTopicServer(s grpc.ServiceRegistrar, srv DeployerInputTopicServer) {
	s.RegisterService(&DeployerInputTopic_ServiceDesc, srv)
}

func _DeployerInputTopic_RequestDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeploymentMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployerInputTopicServer).RequestDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o5.deployer.v1.topic.DeployerInputTopic/RequestDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployerInputTopicServer).RequestDeployment(ctx, req.(*RequestDeploymentMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// DeployerInputTopic_ServiceDesc is the grpc.ServiceDesc for DeployerInputTopic service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DeployerInputTopic_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "o5.deployer.v1.topic.DeployerInputTopic",
	HandlerType: (*DeployerInputTopicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestDeployment",
			Handler:    _DeployerInputTopic_RequestDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "o5/deployer/v1/topic/deployer_input.proto",
}
