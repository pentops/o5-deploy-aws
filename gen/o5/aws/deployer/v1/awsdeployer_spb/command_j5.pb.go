// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package awsdeployer_spb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *TriggerDeploymentRequest) Clone() any {
	return proto.Clone(msg).(*TriggerDeploymentRequest)
}
func (msg *TriggerDeploymentRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TriggerDeploymentRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// TriggerSource is a oneof wrapper
type TriggerSourceTypeKey string

const (
	TriggerSource_Type_Github TriggerSourceTypeKey = "github"
	TriggerSource_Type_Inline TriggerSourceTypeKey = "inline"
)

func (x *TriggerSource) TypeKey() (TriggerSourceTypeKey, bool) {
	switch x.Type.(type) {
	case *TriggerSource_Github:
		return TriggerSource_Type_Github, true
	case *TriggerSource_Inline:
		return TriggerSource_Type_Inline, true
	default:
		return "", false
	}
}

type IsTriggerSourceWrappedType interface {
	TriggerSourceTypeKey() TriggerSourceTypeKey
	proto.Message
}

func (x *TriggerSource) Set(val IsTriggerSourceWrappedType) {
	switch v := val.(type) {
	case *TriggerSource_GithubSource:
		x.Type = &TriggerSource_Github{Github: v}
	case *TriggerSource_InlineSource:
		x.Type = &TriggerSource_Inline{Inline: v}
	}
}
func (x *TriggerSource) Get() IsTriggerSourceWrappedType {
	switch v := x.Type.(type) {
	case *TriggerSource_Github:
		return v.Github
	case *TriggerSource_Inline:
		return v.Inline
	default:
		return nil
	}
}
func (x *TriggerSource_GithubSource) TriggerSourceTypeKey() TriggerSourceTypeKey {
	return TriggerSource_Type_Github
}
func (x *TriggerSource_InlineSource) TriggerSourceTypeKey() TriggerSourceTypeKey {
	return TriggerSource_Type_Inline
}
func (msg *TriggerSource) Clone() any {
	return proto.Clone(msg).(*TriggerSource)
}

type IsTriggerSource_Type = isTriggerSource_Type

func (msg *TriggerSource) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TriggerSource_GithubSource) Clone() any {
	return proto.Clone(msg).(*TriggerSource_GithubSource)
}

type IsTriggerSource_GithubSource_Ref = isTriggerSource_GithubSource_Ref

func (msg *TriggerSource_GithubSource) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TriggerSource_GithubSource) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *TriggerSource_InlineSource) Clone() any {
	return proto.Clone(msg).(*TriggerSource_InlineSource)
}
func (msg *TriggerSource_InlineSource) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TriggerSource_InlineSource) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *TriggerDeploymentResponse) Clone() any {
	return proto.Clone(msg).(*TriggerDeploymentResponse)
}
func (msg *TriggerDeploymentResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TriggerDeploymentResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *TerminateDeploymentRequest) Clone() any {
	return proto.Clone(msg).(*TerminateDeploymentRequest)
}
func (msg *TerminateDeploymentRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TerminateDeploymentRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *TerminateDeploymentResponse) Clone() any {
	return proto.Clone(msg).(*TerminateDeploymentResponse)
}
func (msg *TerminateDeploymentResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *TerminateDeploymentResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertClusterRequest) Clone() any {
	return proto.Clone(msg).(*UpsertClusterRequest)
}

type IsUpsertClusterRequest_Src = isUpsertClusterRequest_Src

func (msg *UpsertClusterRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertClusterRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertClusterResponse) Clone() any {
	return proto.Clone(msg).(*UpsertClusterResponse)
}
func (msg *UpsertClusterResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertClusterResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertEnvironmentRequest) Clone() any {
	return proto.Clone(msg).(*UpsertEnvironmentRequest)
}

type IsUpsertEnvironmentRequest_Src = isUpsertEnvironmentRequest_Src

func (msg *UpsertEnvironmentRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertEnvironmentRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertEnvironmentResponse) Clone() any {
	return proto.Clone(msg).(*UpsertEnvironmentResponse)
}
func (msg *UpsertEnvironmentResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertEnvironmentResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertStackRequest) Clone() any {
	return proto.Clone(msg).(*UpsertStackRequest)
}
func (msg *UpsertStackRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertStackRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpsertStackResponse) Clone() any {
	return proto.Clone(msg).(*UpsertStackResponse)
}
func (msg *UpsertStackResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpsertStackResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SetClusterOverrideRequest) Clone() any {
	return proto.Clone(msg).(*SetClusterOverrideRequest)
}
func (msg *SetClusterOverrideRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SetClusterOverrideRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SetClusterOverrideResponse) Clone() any {
	return proto.Clone(msg).(*SetClusterOverrideResponse)
}
func (msg *SetClusterOverrideResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SetClusterOverrideResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}
