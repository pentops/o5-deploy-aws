// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package awsdeployer_pb

import (
	driver "database/sql/driver"
	fmt "fmt"

	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *DeploymentKeys) Clone() any {
	return proto.Clone(msg).(*DeploymentKeys)
}
func (msg *DeploymentKeys) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentKeys) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentState) Clone() any {
	return proto.Clone(msg).(*DeploymentState)
}
func (msg *DeploymentState) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentState) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStateData) Clone() any {
	return proto.Clone(msg).(*DeploymentStateData)
}
func (msg *DeploymentStateData) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStateData) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentSpec) Clone() any {
	return proto.Clone(msg).(*DeploymentSpec)
}
func (msg *DeploymentSpec) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentSpec) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentFlags) Clone() any {
	return proto.Clone(msg).(*DeploymentFlags)
}
func (msg *DeploymentFlags) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentFlags) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEvent) Clone() any {
	return proto.Clone(msg).(*DeploymentEvent)
}
func (msg *DeploymentEvent) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEvent) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// DeploymentEventType is a oneof wrapper
type DeploymentEventTypeKey string

const (
	DeploymentEvent_Type_Created          DeploymentEventTypeKey = "created"
	DeploymentEvent_Type_Triggered        DeploymentEventTypeKey = "triggered"
	DeploymentEvent_Type_StackWait        DeploymentEventTypeKey = "stackWait"
	DeploymentEvent_Type_StackWaitFailure DeploymentEventTypeKey = "stackWaitFailure"
	DeploymentEvent_Type_StackAvailable   DeploymentEventTypeKey = "stackAvailable"
	DeploymentEvent_Type_RunSteps         DeploymentEventTypeKey = "runSteps"
	DeploymentEvent_Type_StepResult       DeploymentEventTypeKey = "stepResult"
	DeploymentEvent_Type_RunStep          DeploymentEventTypeKey = "runStep"
	DeploymentEvent_Type_Error            DeploymentEventTypeKey = "error"
	DeploymentEvent_Type_Done             DeploymentEventTypeKey = "done"
	DeploymentEvent_Type_Terminated       DeploymentEventTypeKey = "terminated"
)

func (x *DeploymentEventType) TypeKey() (DeploymentEventTypeKey, bool) {
	switch x.Type.(type) {
	case *DeploymentEventType_Created_:
		return DeploymentEvent_Type_Created, true
	case *DeploymentEventType_Triggered_:
		return DeploymentEvent_Type_Triggered, true
	case *DeploymentEventType_StackWait_:
		return DeploymentEvent_Type_StackWait, true
	case *DeploymentEventType_StackWaitFailure_:
		return DeploymentEvent_Type_StackWaitFailure, true
	case *DeploymentEventType_StackAvailable_:
		return DeploymentEvent_Type_StackAvailable, true
	case *DeploymentEventType_RunSteps_:
		return DeploymentEvent_Type_RunSteps, true
	case *DeploymentEventType_StepResult_:
		return DeploymentEvent_Type_StepResult, true
	case *DeploymentEventType_RunStep_:
		return DeploymentEvent_Type_RunStep, true
	case *DeploymentEventType_Error_:
		return DeploymentEvent_Type_Error, true
	case *DeploymentEventType_Done_:
		return DeploymentEvent_Type_Done, true
	case *DeploymentEventType_Terminated_:
		return DeploymentEvent_Type_Terminated, true
	default:
		return "", false
	}
}

type IsDeploymentEventTypeWrappedType interface {
	DeploymentEventTypeKey() DeploymentEventTypeKey
	proto.Message
}

func (x *DeploymentEventType) Set(val IsDeploymentEventTypeWrappedType) {
	switch v := val.(type) {
	case *DeploymentEventType_Created:
		x.Type = &DeploymentEventType_Created_{Created: v}
	case *DeploymentEventType_Triggered:
		x.Type = &DeploymentEventType_Triggered_{Triggered: v}
	case *DeploymentEventType_StackWait:
		x.Type = &DeploymentEventType_StackWait_{StackWait: v}
	case *DeploymentEventType_StackWaitFailure:
		x.Type = &DeploymentEventType_StackWaitFailure_{StackWaitFailure: v}
	case *DeploymentEventType_StackAvailable:
		x.Type = &DeploymentEventType_StackAvailable_{StackAvailable: v}
	case *DeploymentEventType_RunSteps:
		x.Type = &DeploymentEventType_RunSteps_{RunSteps: v}
	case *DeploymentEventType_StepResult:
		x.Type = &DeploymentEventType_StepResult_{StepResult: v}
	case *DeploymentEventType_RunStep:
		x.Type = &DeploymentEventType_RunStep_{RunStep: v}
	case *DeploymentEventType_Error:
		x.Type = &DeploymentEventType_Error_{Error: v}
	case *DeploymentEventType_Done:
		x.Type = &DeploymentEventType_Done_{Done: v}
	case *DeploymentEventType_Terminated:
		x.Type = &DeploymentEventType_Terminated_{Terminated: v}
	}
}
func (x *DeploymentEventType) Get() IsDeploymentEventTypeWrappedType {
	switch v := x.Type.(type) {
	case *DeploymentEventType_Created_:
		return v.Created
	case *DeploymentEventType_Triggered_:
		return v.Triggered
	case *DeploymentEventType_StackWait_:
		return v.StackWait
	case *DeploymentEventType_StackWaitFailure_:
		return v.StackWaitFailure
	case *DeploymentEventType_StackAvailable_:
		return v.StackAvailable
	case *DeploymentEventType_RunSteps_:
		return v.RunSteps
	case *DeploymentEventType_StepResult_:
		return v.StepResult
	case *DeploymentEventType_RunStep_:
		return v.RunStep
	case *DeploymentEventType_Error_:
		return v.Error
	case *DeploymentEventType_Done_:
		return v.Done
	case *DeploymentEventType_Terminated_:
		return v.Terminated
	default:
		return nil
	}
}
func (x *DeploymentEventType_Created) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_Created
}
func (x *DeploymentEventType_Triggered) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_Triggered
}
func (x *DeploymentEventType_StackWait) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_StackWait
}
func (x *DeploymentEventType_StackWaitFailure) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_StackWaitFailure
}
func (x *DeploymentEventType_StackAvailable) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_StackAvailable
}
func (x *DeploymentEventType_RunSteps) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_RunSteps
}
func (x *DeploymentEventType_StepResult) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_StepResult
}
func (x *DeploymentEventType_RunStep) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_RunStep
}
func (x *DeploymentEventType_Error) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_Error
}
func (x *DeploymentEventType_Done) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_Done
}
func (x *DeploymentEventType_Terminated) DeploymentEventTypeKey() DeploymentEventTypeKey {
	return DeploymentEvent_Type_Terminated
}
func (msg *DeploymentEventType) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType)
}

type IsDeploymentEventType_Type = isDeploymentEventType_Type

func (msg *DeploymentEventType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Created) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_Created)
}
func (msg *DeploymentEventType_Created) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Created) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_Triggered) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_Triggered)
}
func (msg *DeploymentEventType_Triggered) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Triggered) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_StackCreate) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_StackCreate)
}
func (msg *DeploymentEventType_StackCreate) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_StackCreate) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_StackWait) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_StackWait)
}
func (msg *DeploymentEventType_StackWait) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_StackWait) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_StackWaitFailure) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_StackWaitFailure)
}
func (msg *DeploymentEventType_StackWaitFailure) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_StackWaitFailure) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_StackAvailable) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_StackAvailable)
}
func (msg *DeploymentEventType_StackAvailable) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_StackAvailable) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_RunSteps) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_RunSteps)
}
func (msg *DeploymentEventType_RunSteps) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_RunSteps) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_StepResult) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_StepResult)
}
func (msg *DeploymentEventType_StepResult) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_StepResult) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_RunStep) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_RunStep)
}
func (msg *DeploymentEventType_RunStep) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_RunStep) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_Error) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_Error)
}
func (msg *DeploymentEventType_Error) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Error) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_Done) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_Done)
}
func (msg *DeploymentEventType_Done) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Done) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentEventType_Terminated) Clone() any {
	return proto.Clone(msg).(*DeploymentEventType_Terminated)
}
func (msg *DeploymentEventType_Terminated) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentEventType_Terminated) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// DeploymentStatus
const (
	DeploymentStatus_UNSPECIFIED DeploymentStatus = 0
	DeploymentStatus_QUEUED      DeploymentStatus = 1
	DeploymentStatus_TRIGGERED   DeploymentStatus = 2
	DeploymentStatus_WAITING     DeploymentStatus = 3
	DeploymentStatus_AVAILABLE   DeploymentStatus = 4
	DeploymentStatus_RUNNING     DeploymentStatus = 5
	DeploymentStatus_DONE        DeploymentStatus = 100
	DeploymentStatus_FAILED      DeploymentStatus = 101
	DeploymentStatus_TERMINATED  DeploymentStatus = 102
)

var (
	DeploymentStatus_name_short = map[int32]string{
		0:   "UNSPECIFIED",
		1:   "QUEUED",
		2:   "TRIGGERED",
		3:   "WAITING",
		4:   "AVAILABLE",
		5:   "RUNNING",
		100: "DONE",
		101: "FAILED",
		102: "TERMINATED",
	}
	DeploymentStatus_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"QUEUED":      1,
		"TRIGGERED":   2,
		"WAITING":     3,
		"AVAILABLE":   4,
		"RUNNING":     5,
		"DONE":        100,
		"FAILED":      101,
		"TERMINATED":  102,
	}
	DeploymentStatus_value_either = map[string]int32{
		"UNSPECIFIED":                   0,
		"DEPLOYMENT_STATUS_UNSPECIFIED": 0,
		"QUEUED":                        1,
		"DEPLOYMENT_STATUS_QUEUED":      1,
		"TRIGGERED":                     2,
		"DEPLOYMENT_STATUS_TRIGGERED":   2,
		"WAITING":                       3,
		"DEPLOYMENT_STATUS_WAITING":     3,
		"AVAILABLE":                     4,
		"DEPLOYMENT_STATUS_AVAILABLE":   4,
		"RUNNING":                       5,
		"DEPLOYMENT_STATUS_RUNNING":     5,
		"DONE":                          100,
		"DEPLOYMENT_STATUS_DONE":        100,
		"FAILED":                        101,
		"DEPLOYMENT_STATUS_FAILED":      101,
		"TERMINATED":                    102,
		"DEPLOYMENT_STATUS_TERMINATED":  102,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x DeploymentStatus) ShortString() string {
	return DeploymentStatus_name_short[int32(x)]
}
func (x DeploymentStatus) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *DeploymentStatus) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := DeploymentStatus_value_either[strVal]
	*x = DeploymentStatus(val)
	return nil
}
