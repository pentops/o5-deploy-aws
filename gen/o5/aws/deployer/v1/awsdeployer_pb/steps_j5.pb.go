// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package awsdeployer_pb

import (
	driver "database/sql/driver"
	fmt "fmt"

	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *DeploymentStep) Clone() any {
	return proto.Clone(msg).(*DeploymentStep)
}
func (msg *DeploymentStep) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStep) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// StepOutputType is a oneof wrapper
type StepOutputTypeKey string

const (
	StepOutput_Type_CfStackStatus     StepOutputTypeKey = "cfStackStatus"
	StepOutput_Type_CfChangesetStatus StepOutputTypeKey = "cfChangesetStatus"
)

func (x *StepOutputType) TypeKey() (StepOutputTypeKey, bool) {
	switch x.Type.(type) {
	case *StepOutputType_CfStackStatus:
		return StepOutput_Type_CfStackStatus, true
	case *StepOutputType_CfChangesetStatus:
		return StepOutput_Type_CfChangesetStatus, true
	default:
		return "", false
	}
}

type IsStepOutputTypeWrappedType interface {
	StepOutputTypeKey() StepOutputTypeKey
	proto.Message
}

func (x *StepOutputType) Set(val IsStepOutputTypeWrappedType) {
	switch v := val.(type) {
	case *StepOutputType_CFStackStatus:
		x.Type = &StepOutputType_CfStackStatus{CfStackStatus: v}
	case *StepOutputType_CFChangesetStatus:
		x.Type = &StepOutputType_CfChangesetStatus{CfChangesetStatus: v}
	}
}
func (x *StepOutputType) Get() IsStepOutputTypeWrappedType {
	switch v := x.Type.(type) {
	case *StepOutputType_CfStackStatus:
		return v.CfStackStatus
	case *StepOutputType_CfChangesetStatus:
		return v.CfChangesetStatus
	default:
		return nil
	}
}
func (x *StepOutputType_CFStackStatus) StepOutputTypeKey() StepOutputTypeKey {
	return StepOutput_Type_CfStackStatus
}
func (x *StepOutputType_CFChangesetStatus) StepOutputTypeKey() StepOutputTypeKey {
	return StepOutput_Type_CfChangesetStatus
}
func (msg *StepOutputType) Clone() any {
	return proto.Clone(msg).(*StepOutputType)
}

type IsStepOutputType_Type = isStepOutputType_Type

func (msg *StepOutputType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *StepOutputType_CFStackStatus) Clone() any {
	return proto.Clone(msg).(*StepOutputType_CFStackStatus)
}
func (msg *StepOutputType_CFStackStatus) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *StepOutputType_CFStackStatus) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *StepOutputType_CFChangesetStatus) Clone() any {
	return proto.Clone(msg).(*StepOutputType_CFChangesetStatus)
}
func (msg *StepOutputType_CFChangesetStatus) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *StepOutputType_CFChangesetStatus) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// DeploymentStepType is a oneof wrapper
type DeploymentStepTypeKey string

const (
	DeploymentStep_Type_EvalJoin   DeploymentStepTypeKey = "evalJoin"
	DeploymentStep_Type_CfCreate   DeploymentStepTypeKey = "cfCreate"
	DeploymentStep_Type_CfPlan     DeploymentStepTypeKey = "cfPlan"
	DeploymentStep_Type_CfUpdate   DeploymentStepTypeKey = "cfUpdate"
	DeploymentStep_Type_CfScale    DeploymentStepTypeKey = "cfScale"
	DeploymentStep_Type_PgUpsert   DeploymentStepTypeKey = "pgUpsert"
	DeploymentStep_Type_PgEvaluate DeploymentStepTypeKey = "pgEvaluate"
	DeploymentStep_Type_PgCleanup  DeploymentStepTypeKey = "pgCleanup"
	DeploymentStep_Type_PgMigrate  DeploymentStepTypeKey = "pgMigrate"
	DeploymentStep_Type_PgDestroy  DeploymentStepTypeKey = "pgDestroy"
)

func (x *DeploymentStepType) TypeKey() (DeploymentStepTypeKey, bool) {
	switch x.Type.(type) {
	case *DeploymentStepType_EvalJoin_:
		return DeploymentStep_Type_EvalJoin, true
	case *DeploymentStepType_CfCreate:
		return DeploymentStep_Type_CfCreate, true
	case *DeploymentStepType_CfPlan:
		return DeploymentStep_Type_CfPlan, true
	case *DeploymentStepType_CfUpdate:
		return DeploymentStep_Type_CfUpdate, true
	case *DeploymentStepType_CfScale:
		return DeploymentStep_Type_CfScale, true
	case *DeploymentStepType_PgUpsert:
		return DeploymentStep_Type_PgUpsert, true
	case *DeploymentStepType_PgEvaluate:
		return DeploymentStep_Type_PgEvaluate, true
	case *DeploymentStepType_PgCleanup:
		return DeploymentStep_Type_PgCleanup, true
	case *DeploymentStepType_PgMigrate:
		return DeploymentStep_Type_PgMigrate, true
	case *DeploymentStepType_PgDestroy:
		return DeploymentStep_Type_PgDestroy, true
	default:
		return "", false
	}
}

type IsDeploymentStepTypeWrappedType interface {
	DeploymentStepTypeKey() DeploymentStepTypeKey
	proto.Message
}

func (x *DeploymentStepType) Set(val IsDeploymentStepTypeWrappedType) {
	switch v := val.(type) {
	case *DeploymentStepType_EvalJoin:
		x.Type = &DeploymentStepType_EvalJoin_{EvalJoin: v}
	case *DeploymentStepType_CFCreate:
		x.Type = &DeploymentStepType_CfCreate{CfCreate: v}
	case *DeploymentStepType_CFPlan:
		x.Type = &DeploymentStepType_CfPlan{CfPlan: v}
	case *DeploymentStepType_CFUpdate:
		x.Type = &DeploymentStepType_CfUpdate{CfUpdate: v}
	case *DeploymentStepType_CFScale:
		x.Type = &DeploymentStepType_CfScale{CfScale: v}
	case *DeploymentStepType_PGUpsert:
		x.Type = &DeploymentStepType_PgUpsert{PgUpsert: v}
	case *DeploymentStepType_PGEvaluate:
		x.Type = &DeploymentStepType_PgEvaluate{PgEvaluate: v}
	case *DeploymentStepType_PGCleanup:
		x.Type = &DeploymentStepType_PgCleanup{PgCleanup: v}
	case *DeploymentStepType_PGMigrate:
		x.Type = &DeploymentStepType_PgMigrate{PgMigrate: v}
	case *DeploymentStepType_PGDestroy:
		x.Type = &DeploymentStepType_PgDestroy{PgDestroy: v}
	}
}
func (x *DeploymentStepType) Get() IsDeploymentStepTypeWrappedType {
	switch v := x.Type.(type) {
	case *DeploymentStepType_EvalJoin_:
		return v.EvalJoin
	case *DeploymentStepType_CfCreate:
		return v.CfCreate
	case *DeploymentStepType_CfPlan:
		return v.CfPlan
	case *DeploymentStepType_CfUpdate:
		return v.CfUpdate
	case *DeploymentStepType_CfScale:
		return v.CfScale
	case *DeploymentStepType_PgUpsert:
		return v.PgUpsert
	case *DeploymentStepType_PgEvaluate:
		return v.PgEvaluate
	case *DeploymentStepType_PgCleanup:
		return v.PgCleanup
	case *DeploymentStepType_PgMigrate:
		return v.PgMigrate
	case *DeploymentStepType_PgDestroy:
		return v.PgDestroy
	default:
		return nil
	}
}
func (x *DeploymentStepType_EvalJoin) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_EvalJoin
}
func (x *DeploymentStepType_CFCreate) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_CfCreate
}
func (x *DeploymentStepType_CFPlan) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_CfPlan
}
func (x *DeploymentStepType_CFUpdate) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_CfUpdate
}
func (x *DeploymentStepType_CFScale) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_CfScale
}
func (x *DeploymentStepType_PGUpsert) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_PgUpsert
}
func (x *DeploymentStepType_PGEvaluate) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_PgEvaluate
}
func (x *DeploymentStepType_PGCleanup) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_PgCleanup
}
func (x *DeploymentStepType_PGMigrate) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_PgMigrate
}
func (x *DeploymentStepType_PGDestroy) DeploymentStepTypeKey() DeploymentStepTypeKey {
	return DeploymentStep_Type_PgDestroy
}
func (msg *DeploymentStepType) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType)
}

type IsDeploymentStepType_Type = isDeploymentStepType_Type

func (msg *DeploymentStepType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_EvalJoin) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_EvalJoin)
}
func (msg *DeploymentStepType_EvalJoin) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_EvalJoin) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_CFCreate) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_CFCreate)
}
func (msg *DeploymentStepType_CFCreate) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_CFCreate) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_CFPlan) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_CFPlan)
}
func (msg *DeploymentStepType_CFPlan) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_CFPlan) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_CFUpdate) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_CFUpdate)
}
func (msg *DeploymentStepType_CFUpdate) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_CFUpdate) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_CFScale) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_CFScale)
}
func (msg *DeploymentStepType_CFScale) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_CFScale) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_PGUpsert) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_PGUpsert)
}
func (msg *DeploymentStepType_PGUpsert) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_PGUpsert) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_PGDestroy) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_PGDestroy)
}
func (msg *DeploymentStepType_PGDestroy) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_PGDestroy) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_PGEvaluate) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_PGEvaluate)
}
func (msg *DeploymentStepType_PGEvaluate) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_PGEvaluate) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_PGCleanup) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_PGCleanup)
}
func (msg *DeploymentStepType_PGCleanup) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_PGCleanup) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *DeploymentStepType_PGMigrate) Clone() any {
	return proto.Clone(msg).(*DeploymentStepType_PGMigrate)
}
func (msg *DeploymentStepType_PGMigrate) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *DeploymentStepType_PGMigrate) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *StepContext) Clone() any {
	return proto.Clone(msg).(*StepContext)
}
func (msg *StepContext) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *StepContext) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CFStackInput) Clone() any {
	return proto.Clone(msg).(*CFStackInput)
}

type IsCFStackInput_Template = isCFStackInput_Template

func (msg *CFStackInput) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CFStackInput) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *S3Template) Clone() any {
	return proto.Clone(msg).(*S3Template)
}
func (msg *S3Template) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *S3Template) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CFImport) Clone() any {
	return proto.Clone(msg).(*CFImport)
}
func (msg *CFImport) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CFImport) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CloudFormationStackParameter) Clone() any {
	return proto.Clone(msg).(*CloudFormationStackParameter)
}

type IsCloudFormationStackParameter_Source = isCloudFormationStackParameter_Source

func (msg *CloudFormationStackParameter) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CloudFormationStackParameter) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// CloudFormationStackParameterType is a oneof wrapper
type CloudFormationStackParameterTypeKey string

const (
	CloudFormationStackParameter_Type_RulePriority CloudFormationStackParameterTypeKey = "rulePriority"
	CloudFormationStackParameter_Type_DesiredCount CloudFormationStackParameterTypeKey = "desiredCount"
)

func (x *CloudFormationStackParameterType) TypeKey() (CloudFormationStackParameterTypeKey, bool) {
	switch x.Type.(type) {
	case *CloudFormationStackParameterType_RulePriority_:
		return CloudFormationStackParameter_Type_RulePriority, true
	case *CloudFormationStackParameterType_DesiredCount_:
		return CloudFormationStackParameter_Type_DesiredCount, true
	default:
		return "", false
	}
}

type IsCloudFormationStackParameterTypeWrappedType interface {
	CloudFormationStackParameterTypeKey() CloudFormationStackParameterTypeKey
	proto.Message
}

func (x *CloudFormationStackParameterType) Set(val IsCloudFormationStackParameterTypeWrappedType) {
	switch v := val.(type) {
	case *CloudFormationStackParameterType_RulePriority:
		x.Type = &CloudFormationStackParameterType_RulePriority_{RulePriority: v}
	case *CloudFormationStackParameterType_DesiredCount:
		x.Type = &CloudFormationStackParameterType_DesiredCount_{DesiredCount: v}
	}
}
func (x *CloudFormationStackParameterType) Get() IsCloudFormationStackParameterTypeWrappedType {
	switch v := x.Type.(type) {
	case *CloudFormationStackParameterType_RulePriority_:
		return v.RulePriority
	case *CloudFormationStackParameterType_DesiredCount_:
		return v.DesiredCount
	default:
		return nil
	}
}
func (x *CloudFormationStackParameterType_RulePriority) CloudFormationStackParameterTypeKey() CloudFormationStackParameterTypeKey {
	return CloudFormationStackParameter_Type_RulePriority
}
func (x *CloudFormationStackParameterType_DesiredCount) CloudFormationStackParameterTypeKey() CloudFormationStackParameterTypeKey {
	return CloudFormationStackParameter_Type_DesiredCount
}
func (msg *CloudFormationStackParameterType) Clone() any {
	return proto.Clone(msg).(*CloudFormationStackParameterType)
}

type IsCloudFormationStackParameterType_Type = isCloudFormationStackParameterType_Type

func (msg *CloudFormationStackParameterType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CloudFormationStackParameterType_RulePriority) Clone() any {
	return proto.Clone(msg).(*CloudFormationStackParameterType_RulePriority)
}
func (msg *CloudFormationStackParameterType_RulePriority) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CloudFormationStackParameterType_RulePriority) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CloudFormationStackParameterType_DesiredCount) Clone() any {
	return proto.Clone(msg).(*CloudFormationStackParameterType_DesiredCount)
}
func (msg *CloudFormationStackParameterType_DesiredCount) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CloudFormationStackParameterType_DesiredCount) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CFStackOutput) Clone() any {
	return proto.Clone(msg).(*CFStackOutput)
}
func (msg *CFStackOutput) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CFStackOutput) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CFChangesetOutput) Clone() any {
	return proto.Clone(msg).(*CFChangesetOutput)
}
func (msg *CFChangesetOutput) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CFChangesetOutput) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *KeyValue) Clone() any {
	return proto.Clone(msg).(*KeyValue)
}
func (msg *KeyValue) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *KeyValue) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// StepPhase
const (
	StepPhase_UNSPECIFIED StepPhase = 0
	StepPhase_WAIT        StepPhase = 1
	StepPhase_STEPS       StepPhase = 2
)

var (
	StepPhase_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "WAIT",
		2: "STEPS",
	}
	StepPhase_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"WAIT":        1,
		"STEPS":       2,
	}
	StepPhase_value_either = map[string]int32{
		"UNSPECIFIED":            0,
		"STEP_PHASE_UNSPECIFIED": 0,
		"WAIT":                   1,
		"STEP_PHASE_WAIT":        1,
		"STEPS":                  2,
		"STEP_PHASE_STEPS":       2,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x StepPhase) ShortString() string {
	return StepPhase_name_short[int32(x)]
}
func (x StepPhase) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *StepPhase) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := StepPhase_value_either[strVal]
	*x = StepPhase(val)
	return nil
}

// CFLifecycle
const (
	CFLifecycle_UNSPECIFIED   CFLifecycle = 0
	CFLifecycle_PROGRESS      CFLifecycle = 1
	CFLifecycle_COMPLETE      CFLifecycle = 2
	CFLifecycle_ROLLING_BACK  CFLifecycle = 3
	CFLifecycle_CREATE_FAILED CFLifecycle = 4
	CFLifecycle_TERMINAL      CFLifecycle = 5
	CFLifecycle_ROLLED_BACK   CFLifecycle = 7
	CFLifecycle_MISSING       CFLifecycle = 6
)

var (
	CFLifecycle_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "PROGRESS",
		2: "COMPLETE",
		3: "ROLLING_BACK",
		4: "CREATE_FAILED",
		5: "TERMINAL",
		7: "ROLLED_BACK",
		6: "MISSING",
	}
	CFLifecycle_value_short = map[string]int32{
		"UNSPECIFIED":   0,
		"PROGRESS":      1,
		"COMPLETE":      2,
		"ROLLING_BACK":  3,
		"CREATE_FAILED": 4,
		"TERMINAL":      5,
		"ROLLED_BACK":   7,
		"MISSING":       6,
	}
	CFLifecycle_value_either = map[string]int32{
		"UNSPECIFIED":                0,
		"CF_LIFECYCLE_UNSPECIFIED":   0,
		"PROGRESS":                   1,
		"CF_LIFECYCLE_PROGRESS":      1,
		"COMPLETE":                   2,
		"CF_LIFECYCLE_COMPLETE":      2,
		"ROLLING_BACK":               3,
		"CF_LIFECYCLE_ROLLING_BACK":  3,
		"CREATE_FAILED":              4,
		"CF_LIFECYCLE_CREATE_FAILED": 4,
		"TERMINAL":                   5,
		"CF_LIFECYCLE_TERMINAL":      5,
		"ROLLED_BACK":                7,
		"CF_LIFECYCLE_ROLLED_BACK":   7,
		"MISSING":                    6,
		"CF_LIFECYCLE_MISSING":       6,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x CFLifecycle) ShortString() string {
	return CFLifecycle_name_short[int32(x)]
}
func (x CFLifecycle) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *CFLifecycle) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := CFLifecycle_value_either[strVal]
	*x = CFLifecycle(val)
	return nil
}

// CFChangesetLifecycle
const (
	CFChangesetLifecycle_UNSPECIFIED CFChangesetLifecycle = 0
	CFChangesetLifecycle_UNAVAILABLE CFChangesetLifecycle = 1
	CFChangesetLifecycle_AVAILABLE   CFChangesetLifecycle = 2
	CFChangesetLifecycle_EXECUTION   CFChangesetLifecycle = 3
	CFChangesetLifecycle_TERMINAL    CFChangesetLifecycle = 4
)

var (
	CFChangesetLifecycle_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNAVAILABLE",
		2: "AVAILABLE",
		3: "EXECUTION",
		4: "TERMINAL",
	}
	CFChangesetLifecycle_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"UNAVAILABLE": 1,
		"AVAILABLE":   2,
		"EXECUTION":   3,
		"TERMINAL":    4,
	}
	CFChangesetLifecycle_value_either = map[string]int32{
		"UNSPECIFIED":                        0,
		"CF_CHANGESET_LIFECYCLE_UNSPECIFIED": 0,
		"UNAVAILABLE":                        1,
		"CF_CHANGESET_LIFECYCLE_UNAVAILABLE": 1,
		"AVAILABLE":                          2,
		"CF_CHANGESET_LIFECYCLE_AVAILABLE":   2,
		"EXECUTION":                          3,
		"CF_CHANGESET_LIFECYCLE_EXECUTION":   3,
		"TERMINAL":                           4,
		"CF_CHANGESET_LIFECYCLE_TERMINAL":    4,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x CFChangesetLifecycle) ShortString() string {
	return CFChangesetLifecycle_name_short[int32(x)]
}
func (x CFChangesetLifecycle) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *CFChangesetLifecycle) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := CFChangesetLifecycle_value_either[strVal]
	*x = CFChangesetLifecycle(val)
	return nil
}
