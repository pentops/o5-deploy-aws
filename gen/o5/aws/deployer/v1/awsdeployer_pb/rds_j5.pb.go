// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package awsdeployer_pb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *RDSCreateSpec) Clone() any {
	return proto.Clone(msg).(*RDSCreateSpec)
}
func (msg *RDSCreateSpec) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSCreateSpec) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// RDSAppSpecType is a oneof wrapper
type RDSAppSpecTypeKey string

const (
	RDSAppSpec_Type_AppSecret RDSAppSpecTypeKey = "appSecret"
	RDSAppSpec_Type_AppConn   RDSAppSpecTypeKey = "appConn"
)

func (x *RDSAppSpecType) TypeKey() (RDSAppSpecTypeKey, bool) {
	switch x.Type.(type) {
	case *RDSAppSpecType_AppSecret:
		return RDSAppSpec_Type_AppSecret, true
	case *RDSAppSpecType_AppConn:
		return RDSAppSpec_Type_AppConn, true
	default:
		return "", false
	}
}

type IsRDSAppSpecTypeWrappedType interface {
	RDSAppSpecTypeKey() RDSAppSpecTypeKey
	proto.Message
}

func (x *RDSAppSpecType) Set(val IsRDSAppSpecTypeWrappedType) {
	switch v := val.(type) {
	case *RDSAppSpecType_SecretsManager:
		x.Type = &RDSAppSpecType_AppSecret{AppSecret: v}
	case *RDSAppSpecType_Aurora:
		x.Type = &RDSAppSpecType_AppConn{AppConn: v}
	}
}
func (x *RDSAppSpecType) Get() IsRDSAppSpecTypeWrappedType {
	switch v := x.Type.(type) {
	case *RDSAppSpecType_AppSecret:
		return v.AppSecret
	case *RDSAppSpecType_AppConn:
		return v.AppConn
	default:
		return nil
	}
}
func (x *RDSAppSpecType_SecretsManager) RDSAppSpecTypeKey() RDSAppSpecTypeKey {
	return RDSAppSpec_Type_AppSecret
}
func (x *RDSAppSpecType_Aurora) RDSAppSpecTypeKey() RDSAppSpecTypeKey {
	return RDSAppSpec_Type_AppConn
}
func (msg *RDSAppSpecType) Clone() any {
	return proto.Clone(msg).(*RDSAppSpecType)
}

type IsRDSAppSpecType_Type = isRDSAppSpecType_Type

func (msg *RDSAppSpecType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAppSpecType_SecretsManager) Clone() any {
	return proto.Clone(msg).(*RDSAppSpecType_SecretsManager)
}
func (msg *RDSAppSpecType_SecretsManager) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAppSpecType_SecretsManager) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RDSAppSpecType_Aurora) Clone() any {
	return proto.Clone(msg).(*RDSAppSpecType_Aurora)
}
func (msg *RDSAppSpecType_Aurora) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAppSpecType_Aurora) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// RDSHostType is a oneof wrapper
type RDSHostTypeKey string

const (
	RDSHost_Type_Aurora         RDSHostTypeKey = "aurora"
	RDSHost_Type_SecretsManager RDSHostTypeKey = "secretsManager"
)

func (x *RDSHostType) TypeKey() (RDSHostTypeKey, bool) {
	switch x.Type.(type) {
	case *RDSHostType_Aurora_:
		return RDSHost_Type_Aurora, true
	case *RDSHostType_SecretsManager_:
		return RDSHost_Type_SecretsManager, true
	default:
		return "", false
	}
}

type IsRDSHostTypeWrappedType interface {
	RDSHostTypeKey() RDSHostTypeKey
	proto.Message
}

func (x *RDSHostType) Set(val IsRDSHostTypeWrappedType) {
	switch v := val.(type) {
	case *RDSHostType_Aurora:
		x.Type = &RDSHostType_Aurora_{Aurora: v}
	case *RDSHostType_SecretsManager:
		x.Type = &RDSHostType_SecretsManager_{SecretsManager: v}
	}
}
func (x *RDSHostType) Get() IsRDSHostTypeWrappedType {
	switch v := x.Type.(type) {
	case *RDSHostType_Aurora_:
		return v.Aurora
	case *RDSHostType_SecretsManager_:
		return v.SecretsManager
	default:
		return nil
	}
}
func (x *RDSHostType_Aurora) RDSHostTypeKey() RDSHostTypeKey {
	return RDSHost_Type_Aurora
}
func (x *RDSHostType_SecretsManager) RDSHostTypeKey() RDSHostTypeKey {
	return RDSHost_Type_SecretsManager
}
func (msg *RDSHostType) Clone() any {
	return proto.Clone(msg).(*RDSHostType)
}

type IsRDSHostType_Type = isRDSHostType_Type

func (msg *RDSHostType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSHostType_Aurora) Clone() any {
	return proto.Clone(msg).(*RDSHostType_Aurora)
}
func (msg *RDSHostType_Aurora) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSHostType_Aurora) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RDSHostType_SecretsManager) Clone() any {
	return proto.Clone(msg).(*RDSHostType_SecretsManager)
}
func (msg *RDSHostType_SecretsManager) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSHostType_SecretsManager) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *AuroraConnection) Clone() any {
	return proto.Clone(msg).(*AuroraConnection)
}
func (msg *AuroraConnection) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *AuroraConnection) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}
