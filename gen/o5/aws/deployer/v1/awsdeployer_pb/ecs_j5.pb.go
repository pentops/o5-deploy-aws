// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package awsdeployer_pb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *ECSTaskContext) Clone() any {
	return proto.Clone(msg).(*ECSTaskContext)
}
func (msg *ECSTaskContext) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ECSTaskContext) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// ECSTaskNetworkType is a oneof wrapper
type ECSTaskNetworkTypeKey string

const (
	ECSTaskNetwork_Type_Awsvpc ECSTaskNetworkTypeKey = "awsvpc"
)

func (x *ECSTaskNetworkType) TypeKey() (ECSTaskNetworkTypeKey, bool) {
	switch x.Type.(type) {
	case *ECSTaskNetworkType_Awsvpc:
		return ECSTaskNetwork_Type_Awsvpc, true
	default:
		return "", false
	}
}

type IsECSTaskNetworkTypeWrappedType interface {
	ECSTaskNetworkTypeKey() ECSTaskNetworkTypeKey
	proto.Message
}

func (x *ECSTaskNetworkType) Set(val IsECSTaskNetworkTypeWrappedType) {
	switch v := val.(type) {
	case *ECSTaskNetworkType_AWSVPC:
		x.Type = &ECSTaskNetworkType_Awsvpc{Awsvpc: v}
	}
}
func (x *ECSTaskNetworkType) Get() IsECSTaskNetworkTypeWrappedType {
	switch v := x.Type.(type) {
	case *ECSTaskNetworkType_Awsvpc:
		return v.Awsvpc
	default:
		return nil
	}
}
func (x *ECSTaskNetworkType_AWSVPC) ECSTaskNetworkTypeKey() ECSTaskNetworkTypeKey {
	return ECSTaskNetwork_Type_Awsvpc
}
func (msg *ECSTaskNetworkType) Clone() any {
	return proto.Clone(msg).(*ECSTaskNetworkType)
}

type IsECSTaskNetworkType_Type = isECSTaskNetworkType_Type

func (msg *ECSTaskNetworkType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ECSTaskNetworkType_AWSVPC) Clone() any {
	return proto.Clone(msg).(*ECSTaskNetworkType_AWSVPC)
}
func (msg *ECSTaskNetworkType_AWSVPC) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ECSTaskNetworkType_AWSVPC) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}
