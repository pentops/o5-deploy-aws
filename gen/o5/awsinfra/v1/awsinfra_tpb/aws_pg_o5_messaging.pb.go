// Code generated by Bprotoc-gen-go-o5-messaging . DO NOT EDIT.
// versions:
// - protoc-gen-go-o5-messaging 0.0.0
// source: o5/awsinfra/v1/topic/aws_pg.proto

package awsinfra_tpb

import (
	context "context"

	messaging_pb "github.com/pentops/o5-go/messaging/v1/messaging_pb"
	o5msg "github.com/pentops/o5-messaging.go/o5msg"
)

// Service: PostgresRequestTopic
type PostgresRequestTopicSender[C any] struct {
	Sender o5msg.Sender[C]
}

func NewPostgresRequestTopicSender[C any](sender o5msg.Sender[C]) *PostgresRequestTopicSender[C] {
	sender.Register(o5msg.TopicDescriptor{
		Service: "o5.awsinfra.v1.topic.PostgresRequestTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "UpsertPostgresDatabase",
				Message: (*UpsertPostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "MigratePostgresDatabase",
				Message: (*MigratePostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "CleanupPostgresDatabase",
				Message: (*CleanupPostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &PostgresRequestTopicSender[C]{Sender: sender}
}

type PostgresRequestTopicCollector[C any] struct {
	Collector o5msg.Collector[C]
}

func NewPostgresRequestTopicCollector[C any](collector o5msg.Collector[C]) *PostgresRequestTopicCollector[C] {
	collector.Register(o5msg.TopicDescriptor{
		Service: "o5.awsinfra.v1.topic.PostgresRequestTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "UpsertPostgresDatabase",
				Message: (*UpsertPostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "MigratePostgresDatabase",
				Message: (*MigratePostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
			{
				Name:    "CleanupPostgresDatabase",
				Message: (*CleanupPostgresDatabaseMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &PostgresRequestTopicCollector[C]{Collector: collector}
}

// Method: UpsertPostgresDatabase

func (msg *UpsertPostgresDatabaseMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsinfra.v1.topic.PostgresRequestTopic",
		GrpcMethod:       "UpsertPostgresDatabase",
		Headers:          map[string]string{},
		DestinationTopic: "o5-aws-command_request",
	}
	return header
}

func (send PostgresRequestTopicSender[C]) UpsertPostgresDatabase(ctx context.Context, sendContext C, msg *UpsertPostgresDatabaseMessage) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect PostgresRequestTopicCollector[C]) UpsertPostgresDatabase(sendContext C, msg *UpsertPostgresDatabaseMessage) {
	collect.Collector.Collect(sendContext, msg)
}

// Method: MigratePostgresDatabase

func (msg *MigratePostgresDatabaseMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsinfra.v1.topic.PostgresRequestTopic",
		GrpcMethod:       "MigratePostgresDatabase",
		Headers:          map[string]string{},
		DestinationTopic: "o5-aws-command_request",
	}
	return header
}

func (send PostgresRequestTopicSender[C]) MigratePostgresDatabase(ctx context.Context, sendContext C, msg *MigratePostgresDatabaseMessage) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect PostgresRequestTopicCollector[C]) MigratePostgresDatabase(sendContext C, msg *MigratePostgresDatabaseMessage) {
	collect.Collector.Collect(sendContext, msg)
}

// Method: CleanupPostgresDatabase

func (msg *CleanupPostgresDatabaseMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsinfra.v1.topic.PostgresRequestTopic",
		GrpcMethod:       "CleanupPostgresDatabase",
		Headers:          map[string]string{},
		DestinationTopic: "o5-aws-command_request",
	}
	return header
}

func (send PostgresRequestTopicSender[C]) CleanupPostgresDatabase(ctx context.Context, sendContext C, msg *CleanupPostgresDatabaseMessage) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect PostgresRequestTopicCollector[C]) CleanupPostgresDatabase(sendContext C, msg *CleanupPostgresDatabaseMessage) {
	collect.Collector.Collect(sendContext, msg)
}

// Service: PostgresReplyTopic
type PostgresReplyTopicSender[C any] struct {
	Sender o5msg.Sender[C]
}

func NewPostgresReplyTopicSender[C any](sender o5msg.Sender[C]) *PostgresReplyTopicSender[C] {
	sender.Register(o5msg.TopicDescriptor{
		Service: "o5.awsinfra.v1.topic.PostgresReplyTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "PostgresDatabaseStatus",
				Message: (*PostgresDatabaseStatusMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &PostgresReplyTopicSender[C]{Sender: sender}
}

type PostgresReplyTopicCollector[C any] struct {
	Collector o5msg.Collector[C]
}

func NewPostgresReplyTopicCollector[C any](collector o5msg.Collector[C]) *PostgresReplyTopicCollector[C] {
	collector.Register(o5msg.TopicDescriptor{
		Service: "o5.awsinfra.v1.topic.PostgresReplyTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "PostgresDatabaseStatus",
				Message: (*PostgresDatabaseStatusMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &PostgresReplyTopicCollector[C]{Collector: collector}
}

// Method: PostgresDatabaseStatus

func (msg *PostgresDatabaseStatusMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.awsinfra.v1.topic.PostgresReplyTopic",
		GrpcMethod:       "PostgresDatabaseStatus",
		Headers:          map[string]string{},
		DestinationTopic: "o5-aws-command_reply",
	}
	if msg.Request != nil {
		header.Extension = &messaging_pb.Message_Reply_{
			Reply: &messaging_pb.Message_Reply{
				ReplyTo: msg.Request.ReplyTo,
			},
		}
	}
	return header
}

func (send PostgresReplyTopicSender[C]) PostgresDatabaseStatus(ctx context.Context, sendContext C, msg *PostgresDatabaseStatusMessage) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect PostgresReplyTopicCollector[C]) PostgresDatabaseStatus(sendContext C, msg *PostgresDatabaseStatusMessage) {
	collect.Collector.Collect(sendContext, msg)
}
