// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package environment_pb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *Cluster) Clone() any {
	return proto.Clone(msg).(*Cluster)
}

type IsCluster_Provider = isCluster_Provider

func (msg *Cluster) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Cluster) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *CombinedConfig) Clone() any {
	return proto.Clone(msg).(*CombinedConfig)
}

type IsCombinedConfig_Provider = isCombinedConfig_Provider

func (msg *CombinedConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *CombinedConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *AWSCluster) Clone() any {
	return proto.Clone(msg).(*AWSCluster)
}
func (msg *AWSCluster) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *AWSCluster) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *O5Sidecar) Clone() any {
	return proto.Clone(msg).(*O5Sidecar)
}
func (msg *O5Sidecar) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *O5Sidecar) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *ECSCluster) Clone() any {
	return proto.Clone(msg).(*ECSCluster)
}
func (msg *ECSCluster) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ECSCluster) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *ALBIngress) Clone() any {
	return proto.Clone(msg).(*ALBIngress)
}
func (msg *ALBIngress) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ALBIngress) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *EventBridge) Clone() any {
	return proto.Clone(msg).(*EventBridge)
}
func (msg *EventBridge) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *EventBridge) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *O5Deployer) Clone() any {
	return proto.Clone(msg).(*O5Deployer)
}
func (msg *O5Deployer) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *O5Deployer) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RDSHost) Clone() any {
	return proto.Clone(msg).(*RDSHost)
}
func (msg *RDSHost) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSHost) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// RDSAuthType is a oneof wrapper
type RDSAuthTypeKey string

const (
	RDSAuth_Type_SecretsManager RDSAuthTypeKey = "secretsManager"
	RDSAuth_Type_Iam            RDSAuthTypeKey = "iam"
)

func (x *RDSAuthType) TypeKey() (RDSAuthTypeKey, bool) {
	switch x.Type.(type) {
	case *RDSAuthType_SecretsManager_:
		return RDSAuth_Type_SecretsManager, true
	case *RDSAuthType_Iam:
		return RDSAuth_Type_Iam, true
	default:
		return "", false
	}
}

type IsRDSAuthTypeWrappedType interface {
	RDSAuthTypeKey() RDSAuthTypeKey
	proto.Message
}

func (x *RDSAuthType) Set(val IsRDSAuthTypeWrappedType) {
	switch v := val.(type) {
	case *RDSAuthType_SecretsManager:
		x.Type = &RDSAuthType_SecretsManager_{SecretsManager: v}
	case *RDSAuthType_IAM:
		x.Type = &RDSAuthType_Iam{Iam: v}
	}
}
func (x *RDSAuthType) Get() IsRDSAuthTypeWrappedType {
	switch v := x.Type.(type) {
	case *RDSAuthType_SecretsManager_:
		return v.SecretsManager
	case *RDSAuthType_Iam:
		return v.Iam
	default:
		return nil
	}
}
func (x *RDSAuthType_SecretsManager) RDSAuthTypeKey() RDSAuthTypeKey {
	return RDSAuth_Type_SecretsManager
}
func (x *RDSAuthType_IAM) RDSAuthTypeKey() RDSAuthTypeKey {
	return RDSAuth_Type_Iam
}
func (msg *RDSAuthType) Clone() any {
	return proto.Clone(msg).(*RDSAuthType)
}

type IsRDSAuthType_Type = isRDSAuthType_Type

func (msg *RDSAuthType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAuthType_IAM) Clone() any {
	return proto.Clone(msg).(*RDSAuthType_IAM)
}
func (msg *RDSAuthType_IAM) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAuthType_IAM) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RDSAuthType_SecretsManager) Clone() any {
	return proto.Clone(msg).(*RDSAuthType_SecretsManager)
}
func (msg *RDSAuthType_SecretsManager) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RDSAuthType_SecretsManager) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}
