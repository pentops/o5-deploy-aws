---
name: "o5deploy"

blobstores:
  - name: cf-templates

secrets:
  - name: github

databases:
  - name: main
    postgres:
      runOutbox: true
      dbName: o5
      serverGroup: default
      dbExtensions:
        - "uuid-ossp"

      migrateContainer:
        image:
          name: o5-deploy-aws
          registry: ghcr.io/pentops
        command: [migrate]
        envVars:
          - name: "POSTGRES_URL"
            database:
              databaseName: main
targets:
  - name: "o5-deployer-input"
  - name: "o5-deployer-event"
  - name: "o5-aws-command_request"
  - name: "o5-aws-command_reply"

runtimes:
  - name: main
    grantMetaDeployPermissions: true
    routes:
      - prefix: "/deployer/v1/"
        protocol: ROUTE_PROTOCOL_HTTP
        port: 8080

    subscriptions:
      - name: "webhook-github"
        envName: "publicweb"
      - name: "o5-deployer-input"
      - name: "o5-aws-command_request"
      - name: "o5-aws-command_reply"
      - name: "o5-aws-callback"
        rawMessage: true
      - name: "o5-cloudwatch-events"
        rawMessage: true

    containers:
      - name: main
        demand: DEMAND_LIGHT
        image:
            name: o5-deploy-aws
            registry: ghcr.io/pentops
        command: [serve]
        envVars:
          - name: POSTGRES_URL
            database:
              databaseName: main
          - name: DEPLOYER_ASSUME_ROLE
            fromEnv:
              name: "o5-deployer-assume-role"
          - name: CALLBACK_ARN
            fromEnv:
              name: "o5-deployer-callback-arn"

          - name: CF_TEMPLATES
            blobstore:
              name: cf-templates
              s3_direct: true
          - name: GRPC_PORT
            value: "8080"
          - name: GITHUB_APPS
            secret:
              secretName: github


