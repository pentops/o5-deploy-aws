syntax = "proto3";

package o5.environment.v1;

import "o5/environment/v1/environment.proto";

option go_package = "github.com/pentops/o5-deploy-aws/gen/o5/environment/v1/environment_pb";

message Cluster {
  string name = 1;

  oneof provider {
    AWSCluster aws = 10;
  }
}

message CombinedConfig {
  string name = 1;

  oneof provider {
    AWSCluster aws = 10;
  }

  repeated Environment environments = 2;
}

message AWSCluster {
  string vpc_id = 1;
  string aws_account = 2;
  string aws_region = 3;

  // S3 buckets (and others?) must be globally unique for all AWS accounts and regions,
  // buckets are named {name}-{app}-{environment}-{region}-{global_namespace}
  string global_namespace = 4;

  O5Deployer o5_deployer = 10;
  ALBIngress alb_ingress = 11;
  O5Sidecar o5_sidecar = 12;
  EventBridge event_bridge = 13;
  ECSCluster ecs_cluster = 14;

  repeated RDSHost rds_hosts = 20;
}

message O5Sidecar {
  string image_version = 13; // Must be set, no default.
  optional string image_repo = 14; // defaults to ghcr.io/pentops/o5-runtime-sidecar
}

message ECSCluster {
  string cluster_name = 1;
  string task_execution_role = 2;

  // Default value for o5.application.v1.Container.Image.registry
  string default_registry = 3;

  repeated string security_group_ids = 4;
  repeated string subnet_ids = 5;
}

message ALBIngress {
  string listener_arn = 1;
}

message EventBridge {
  string event_bus_arn = 1;
}

message O5Deployer {
  // The role O5 assumes when deploying to this environment
  string assume_role_arn = 1;
}

// RDSHost represents a Cluister or Proxy in AWS RDS
message RDSHost {
  // Matches o5.application.v1.Database.Postgres.server_group
  string server_group_name = 1;

  // AWS API: 'Endpoint' - hostname without port.
  // Used for connection and authentication tokens.
  string endpoint = 2;

  // AWS API: 'Port'
  // The port that the database engine is listening on.
  int32 port = 3;

  RDSAuthType auth = 4;

  string identifier = 5;
}

message RDSAuthType {
  oneof type {
    SecretsManager secrets_manager = 4;
    IAM iam = 5;
  }

  // RDS IAM authentication
  // https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.Connecting.html
  message IAM {
    // A username to use getting the token, which then also matches the user
    // implementation of the engine.
    // For root access, this could be the master_user but it only needs to be a
    // user with the correct permissions.
    string db_user = 1;

    // defaults to the user's name. Used when accessing, not required for the
    // token.
    optional string db_name = 2;
  }

  message SecretsManager {
    // Name (or ARN) of a secret which contains the fields:
    // dbuser
    // dbpassword
    // dbhost:
    //   hostname with or without port
    //   defaulting based on the engine
    //   (e.g. 5423 or 3306)
    // dbname
    // dburl: Full url/dsn style like postgres://...
    string secretName = 1;
  }
}
