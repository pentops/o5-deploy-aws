syntax = "proto3";

package o5.awsinfra.v1.topic;

import "buf/validate/validate.proto";
import "google/protobuf/empty.proto";
import "o5/awsdeployer/v1/steps.proto";
import "o5/messaging/v1/annotations.proto";
import "o5/messaging/v1/reqres.proto";

option go_package = "github.com/pentops/o5-deploy-aws/gen/o5/awsinfra/v1/awsinfra_tpb";

service CloudFormationRequestTopic {
  option (o5.messaging.v1.config).request.name = "o5-aws-command";

  rpc CreateNewStack(CreateNewStackMessage) returns (google.protobuf.Empty) {}
  rpc UpdateStack(UpdateStackMessage) returns (google.protobuf.Empty) {}
  rpc CreateChangeSet(CreateChangeSetMessage) returns (google.protobuf.Empty) {}
  rpc ApplyChangeSet(ApplyChangeSetMessage) returns (google.protobuf.Empty) {}
  rpc DeleteStack(DeleteStackMessage) returns (google.protobuf.Empty) {}
  rpc ScaleStack(ScaleStackMessage) returns (google.protobuf.Empty) {}
  rpc CancelStackUpdate(CancelStackUpdateMessage) returns (google.protobuf.Empty) {}

  rpc StabalizeStack(StabalizeStackMessage) returns (google.protobuf.Empty) {}
}

service CloudFormationReplyTopic {
  option (o5.messaging.v1.config).reply.name = "o5-aws-command";
  rpc StackStatusChanged(StackStatusChangedMessage) returns (google.protobuf.Empty) {}
  rpc ChangeSetStatusChanged(ChangeSetStatusChangedMessage) returns (google.protobuf.Empty) {}
}

message StabalizeStackMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string stack_name = 2;
  bool cancel_update = 3;
}

message CreateNewStackMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  o5.awsdeployer.v1.CFStackInput spec = 2;

  // Create a stack with no resources (uses a fake resource placeholder)
  bool empty_stack = 3;
}

message UpdateStackMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  o5.awsdeployer.v1.CFStackInput spec = 2;
}

message CreateChangeSetMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  o5.awsdeployer.v1.CFStackInput spec = 2;

  // When true, creates a filtered changeset that only includes resources which
  // are marked for retention and which already exist, e.g. s3 buckets and
  // secrets. It should not be used on existing stacks.
  bool import_resources = 3;
}

message ApplyChangeSetMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string stack_name = 2;
  string change_set_name = 3;
}

message DeleteStackMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string stack_name = 2;
}

message ScaleStackMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string stack_name = 2;
  int32 desired_count = 3;
}

message CancelStackUpdateMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string stack_name = 2;
}

message StackStatusChangedMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string event_id = 2 [(buf.validate.field).string = {pattern: "^[a-zA-Z0-9-]+$"}];
  string stack_name = 3 [(buf.validate.field).required = true];
  string status = 4 [(buf.validate.field).required = true];
  repeated o5.awsdeployer.v1.KeyValue outputs = 5;
  o5.awsdeployer.v1.CFLifecycle lifecycle = 6 [(buf.validate.field).required = true];
}

message ChangeSetStatusChangedMessage {
  o5.messaging.v1.RequestMetadata request = 1;
  string event_id = 2 [(buf.validate.field).string = {pattern: "^[a-zA-Z0-9-]+$"}];
  string stack_name = 3 [(buf.validate.field).required = true];
  string change_set_name = 4 [(buf.validate.field).required = true];
  string status = 5 [(buf.validate.field).required = true];
  o5.awsdeployer.v1.CFChangesetLifecycle lifecycle = 6 [(buf.validate.field).required = true];
}
